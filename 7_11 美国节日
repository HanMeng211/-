// write your code here cpp
#include<iostream>
using namespace std;
int day_is_week(int year,int month,int day)
{
    //w=y+[y/4]+[c/4]-2c+[26(m+1)/10]+d-1
    if(month == 1 || month == 2)
    {
        month += 12;
        year -= 1;
    }
    //世纪，年的前两位数
    int c = year / 100;
    //年（后两位）
    int y = year % 100;
    int week = y + ( y / 4 ) + ( c / 4 ) - 2 * c + ( 13 * ( month + 1) / 5 ) + day - 1;
    //当天是周几
    week = (week % 7 + 7) % 7;
    if(week == 0)
    {
        week = 7;
    }
    
    return week;
}
//求某年某月的第几周的周几是这个月的第几天(几号)
int day_count(int year,int month,int d_week,int d_of_week)//d_week 第几周  d_of_week 周几
{
    //确定1号是周几
    int week = day_is_week(year,month,1);
    //1+（第几周-1）* 7 + （（ 7 - 1号周几）+ 需要周几）% 7；
    int day = 1 + (d_week - 1) * 7 + ((7 - week) + d_of_week) % 7;
    return day;
}
//元旦
void new_year_day(int year) 
{
    printf("%d-01-01\n", year);
}
 
// 马丁·路德·金纪念日
void martin_luther_king_day(int year) 
{
    printf("%d-01-%02d\n", year, day_count(year, 1, 3, 1));
}
 
// 总统日
void president_day(int year) 
{
    printf("%d-02-%02d\n", year, day_count(year, 2, 3, 1));
}
 
// 阵亡将士纪念日
void memorial_day(int year) 
{
    // 从 6 月往前数
    int week = day_is_week(year, 6, 1);
    int day;
    if(week == 1)
    {
        day = 31 - 6;
    }
    else
    {
       day = 31 - week + 2;
    }
    printf("%d-05-%02d\n", year, day);
}
 
// 国庆
void independence_day(int year) 
{
    printf("%d-07-04\n", year);
}
 
// 劳动节
void labor_day(int year) 
{
    printf("%d-09-%02d\n", year, day_count(year, 9, 1, 1));
}
 
// 感恩节
void thanks_giving_day(int year) 
{
    printf("%d-11-%02d\n", year, day_count(year, 11, 4, 4));
}
 
// 圣诞节
void christmas(int year) 
{
    printf("%d-12-25\n", year);
}
// 输入年份调用此接口，即可打印美国节日日期
void festival(int year) 
{
    new_year_day(year);
    martin_luther_king_day(year);
    president_day(year);
    memorial_day(year);
    independence_day(year);
    labor_day(year);
    thanks_giving_day(year);
    christmas(year);
}

int main()
{
    int year;
    while(cin>>year)
    {
        festival(year);
        cout<<endl;
    }
    return 0;
}
